name: CI
on:
    push:
        branches:
            - main
            - run-tests-with-ew # TODO(remove when ready for PR)
    pull_request:
env:
    CACHE_VERSION: 1 # Increment this to invalidate the cache.
    JAVA_VERSION: 19
jobs:
    checks:
        name: Checks
        runs-on: ubuntu-latest
        timeout-minutes: 10
        steps:
            - uses: actions/checkout@v3
            - uses: actions/setup-java@v3
              with:
                  distribution: 'zulu'
                  java-version: ${{ env.JAVA_VERSION }}
            - run: ./ci_clear_gradle_cache.sh
            - uses: actions/cache@v3
              with:
                  path: |
                      ~/.gradle/caches
                      ~/.gradle/wrapper
                  key: ${{ runner.os }}-gradle-${{ env.CACHE_VERSION }}-${{ hashFiles('**/**.gradle.kts', '**/gradle/wrapper/gradle-wrapper.properties', '**/libs.versions.toml') }}

            - name: Check Gradle wrapper
              uses: gradle/wrapper-validation-action@v1

            - name: Check style
              run: ./gradlew lintKotlin || { exit_code=$?; printf "*** Run './gradlew formatKotlin' to fix the style issues. ***"; exit $exit_code; }

            - name: Check lint
              run: ./gradlew lint

            - name: Check binary compatibility
              run: ./gradlew apiCheck || { exit_code=$?; printf "*** This PR changes Coil's public API. If this change is intentional, run './gradlew apiDump' and commit the new API files. ***"; exit $exit_code; }

    unit-tests:
        name: Unit tests
        runs-on: ubuntu-latest
        timeout-minutes: 10
        steps:
            - uses: actions/checkout@v3
            - uses: actions/setup-java@v3
              with:
                  distribution: 'zulu'
                  java-version: ${{ env.JAVA_VERSION }}
            - run: ./ci_clear_gradle_cache.sh
            - uses: actions/cache@v3
              with:
                  path: |
                      ~/.gradle/caches
                      ~/.gradle/wrapper
                  key: ${{ runner.os }}-gradle-${{ env.CACHE_VERSION }}-${{ hashFiles('**/**.gradle.kts', '**/gradle/wrapper/gradle-wrapper.properties', '**/libs.versions.toml') }}

            - name: Unit tests
              run: ./gradlew testDebugUnitTest

    instrumentation-tests:
        name: Instrumentation tests
        runs-on: macOS-latest
        timeout-minutes: 30
        steps:
            - uses: actions/checkout@v3
            - uses: actions/setup-java@v3
              with:
                  distribution: 'zulu'
                  java-version: ${{ env.JAVA_VERSION }}
            - run: ./ci_clear_gradle_cache.sh
            - uses: actions/cache@v3
              with:
                  path: |
                      ~/.gradle/caches
                      ~/.gradle/wrapper
                  key: ${{ runner.os }}-gradle-${{ env.CACHE_VERSION }}-${{ hashFiles('**/**.gradle.kts', '**/gradle/wrapper/gradle-wrapper.properties', '**/libs.versions.toml') }}

            - name: Instrumentation tests
              env:
                  EW_API_TOKEN: ${{ secrets.EW_API_TOKEN }}
              run: mv .github/debug.keystore ~/.android; ./gradlew testDebugWithEmulatorWtf --parallel

# TODO(uncomment when ready for PR)
#    deploy-snapshot:
#        name: Deploy snapshot
#        runs-on: ubuntu-latest
#        timeout-minutes: 10
#        if: github.repository == 'coil-kt/coil' && github.ref == 'refs/heads/main'
#        needs: [checks, unit-tests, instrumentation-tests]
#        steps:
#            - uses: actions/checkout@v3
#            - uses: actions/setup-java@v3
#              with:
#                  distribution: 'zulu'
#                  java-version: ${{ env.JAVA_VERSION }}
#            - run: ./ci_clear_gradle_cache.sh
#            - uses: actions/cache@v3
#              with:
#                  path: |
#                      ~/.gradle/caches
#                      ~/.gradle/wrapper
#                  key: ${{ runner.os }}-gradle-${{ env.CACHE_VERSION }}-${{ hashFiles('**/**.gradle.kts', '**/gradle/wrapper/gradle-wrapper.properties', '**/libs.versions.toml') }}
#
#            - name: Deploy Snapshot
#              env:
#                  ORG_GRADLE_PROJECT_mavenCentralUsername: ${{ secrets.SONATYPE_NEXUS_USERNAME }}
#                  ORG_GRADLE_PROJECT_mavenCentralPassword: ${{ secrets.SONATYPE_NEXUS_PASSWORD }}
#              run: ./publish_remote.sh
